{"version":3,"sources":["webpack:///./src/components/containers/ButtonLink.js","webpack:///./src/components/containers/OuterPart.js","webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Underline.js","webpack:///./src/components/Service.js","webpack:///./src/components/Services.js","webpack:///./src/components/containers/JobDescription.js","webpack:///./src/components/containers/JobButton.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js","webpack:///./src/components/containers/InnerPart.js"],"names":["StyledButtonLink","styled","props","theme","colors","primary5","primary9","spacings","spacing","transitions","transition","radius","center","primary1","primary8","ButtonLink","to","name","StyledOuterContentContainer","section","grey","grey10","OuterContentContainer","children","StyledImage","index","shadows","darkShadow","ProjectInfo","div","white","StyledProject","article","ProjectNumber","ProjectLinks","ProjectStack","grey9","grey5","Project","description","title","github","stack","url","image","fluid","childImageSharp","map","item","key","id","href","target","Projects","projects","showLink","Title","type","project","StyledHero","header","blue","HeroSection","widths","maxWidth","ImageWrapper","HeroInfo","Hero","useStaticQuery","file","className","rel","icon","text","StyledUnderline","hero","Underline","StyledService","Service","Services","services","StyledJobDescription","JobDescription","useContext","ThemeContext","style","color","StyledJobButton","button","fontWeight","normal","active","grey1","JobButton","render","Function","prototype","onClick","ButtonContainer","JobInfo","JobDate","p","Jobs","jobs","allStrapiJobs","nodes","useState","value","setValue","company","position","date","desc","strapiId","query","data","allStrapiProjects","blogs","allStrapiBlogs","Layout","SEO","Blogs","BlogStyling","lightShadow","BlogCard","Footer","Blog","category","slug","blog","StyledInnerContainer","width","InnerContentContainer"],"mappings":"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","file":"component---src-pages-index-js-535a664db4083ff92be3.js","sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\n\r\n/*\r\n     I have created a button/link component \r\n     out of the global classes called 'btn' and 'center-btn'\r\n     If it is centered or not has become a prop... \r\n*/\r\n\r\nconst StyledButtonLink = styled(props => <Link {...props} />)`\r\n    text-transform: uppercase;\r\n    background:  ${({ theme }) => theme.colors.primary5};;\r\n    color:  ${({ theme }) => theme.colors.primary9};\r\n    padding: 0.375rem 0.75rem;\r\n    letter-spacing: ${({ theme }) => theme.spacings.spacing};\r\n    font-weight: 700;\r\n    -webkit-transition: ${({ theme }) => theme.transitions.transition};\r\n    transition: ${({ theme }) => theme.transitions.transition};\r\n    font-size: 0.875rem;\r\n    border: 2px solid transparent;\r\n    cursor: pointer;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\r\n    border-radius: ${({ theme }) => theme.radius.radius};\r\n    display: ${({ center }) => (center ? \"block\" : \"inline-block\")};\r\n    width: ${({ center }) => center && \"12rem\"};\r\n    text-align:  ${({ center }) => center && \"center\"};\r\n    margin: ${({ center }) => center && \"0 auto\"};\r\n    margin-top: ${({ center }) => center && \"3rem\"};\r\n  \r\n  &:hover {\r\n    color:${({ theme }) => theme.colors.primary1};\r\n    background: ${({ theme }) => theme.colors.primary8};\r\n  }\r\n`\r\n\r\nconst ButtonLink = ({ center, to, name }) => {\r\n  return (\r\n    <StyledButtonLink to={to} center={center}>\r\n      {name}\r\n    </StyledButtonLink>\r\n  )\r\n} \r\n\r\nexport default ButtonLink","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\n/*\r\n I have turned the section class (. section in main.css) into this \r\n container-component. I included a grey-prop to be able to \r\n alternate between white and grey sections.\r\n*/\r\n\r\n\r\nconst StyledOuterContentContainer = styled.section`\r\n  padding: 5rem 0;\r\n  background: ${({ theme, grey }) => grey && theme.colors.grey10};\r\n`\r\n\r\nconst OuterContentContainer = ({ children, grey }) => {\r\n  return <StyledOuterContentContainer grey={grey}>{children}</StyledOuterContentContainer>\r\n}\r\n\r\nexport default OuterContentContainer;","// import React from \"react\"\n// import PropTypes from \"prop-types\"\n// import Image from \"gatsby-image\"\n// import { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\n\n\n// const Project = ({ description, title, github, stack, url, image, index }) => {\n//   return (\n//     <article className=\"project\">\n//       {/* if image is not supplied, instead of breaking, dont show any image */}\n//       {image && (\n//         <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n//       )}\n      \n//       <div className=\"project-info\">\n//         <span className=\"project-number\">0{index + 1}.</span>\n//         {/* if title is not supplied, set a defualt title */}\n//         <h3>{title || \"Projekt\"}</h3>\n//         <p className=\"project-description\">{description}</p>\n//         <div className=\"project-stack\">\n//           {stack.map(item => {\n//             return <span key={item.id}>{item.title}</span>\n//           })}\n//         </div>\n//         <div className=\"project-links\">\n//           <a href={github}>\n//             <FaGithubSquare className=\"project-icon\" />\n//           </a>\n//           <a href={url}>\n//             <FaShareSquare className=\"project-icon\" />\n//           </a>\n//         </div>\n//       </div>\n//     </article>\n//   )\n// }\n\n// /*if you for example forget to set these fields in strapi,\n// so if you forget to give them values, you will get a error in your console\n// */\n// Project.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   git: PropTypes.string.isRequired,\n//   url: PropTypes.string.isRequired,\n//   description: PropTypes.string.isRequired,\n//   image: PropTypes.object.isRequired,\n//   stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n// }\n\n// export default Project\n\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nimport styled from \"styled-components\"\n\n// Here we create one 'Project in focus'\n\nconst StyledImage = styled(props => <Image {...props} />)`\n  border-top-left-radius: ${({ theme }) => theme.radius.radius};\n  border-top-right-radius: ${({ theme }) => theme.radius.radius};\n  height: 19rem;\n  z-index: 1;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      to bottom right,\n      ${({ theme }) => theme.colors.primary5},\n      #222\n    );\n    opacity: 0.85;\n    transition: ${({ theme }) => theme.transitions.transition};\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 22rem;\n  }\n  @media screen and (min-width: 992px) {\n    grid-column: ${({ index }) => (index % 2 !== 0 ? \"5/-1\" : \"1 / span 8\")};\n    grid-row: 1 / 1;\n    height: 30rem;\n    border-radius: ${({ theme }) => theme.radius.radius};\n    box-shadow: ${({ theme }) => theme.shadows.darkShadow};\n  }\n`\n\nconst ProjectInfo = styled.div`\n  background: ${({ theme }) => theme.colors.white};\n  padding: 1rem 2rem;\n  border-bottom-left-radius: ${({ theme }) => theme.radius.radius};\n  border-bottom-right-radius: ${({ theme }) => theme.radius.radius};\n\n  h3 {\n    font-weight: 500;\n    margin-bottom: 1.5rem;\n    font-size: 1.5rem;\n  }\n\n  \n  @media screen and (min-width: 992px) {\n    border-radius: ${({ theme }) => theme.radius.radius};\n    box-shadow: ${({ theme }) => theme.shadows.darkShadow};\n    z-index: 1;\n    grid-column: ${({ index }) => (index % 2 === 0 ? \"5 / 12\" : \"2 / span 7\")};\n    grid-row: 1 / 1;\n    text-align: ${({ index }) => index % 2 === 0 && \"left\"};\n  }\n`\n\nconst StyledProject = styled.article`\n  display: grid;\n  margin-bottom: 4rem;\n\n  @media screen and (min-width: 992px) {\n    grid-template-columns: repeat(12, 1fr);\n    align-items: center;\n  }\n\n  :hover ${StyledImage} ::after {\n    opacity: 0;\n  }\n`\n\nconst ProjectNumber = styled.div`\n  display: inline-block;\n  font-size: 1.25rem;\n  color: ${({ theme }) => theme.colors.primary5};\n  margin-bottom: 0.75rem;\n`\n\nconst ProjectLinks = styled.div`\n  a {\n    color: ${({ theme }) => theme.colors.primary5};\n    font-size: 1.25rem;\n    margin-right: 0.5rem;\n    transition: ${({ theme }) => theme.transitions.transition};\n    :hover {\n      color: ${({ theme }) => theme.colors.primary1};\n    }\n  }\n`\nconst ProjectStack = styled.div`\n  span {\n    margin-bottom: 1rem;\n    display: inline-block;\n    background: ${({ theme }) => theme.colors.grey9};\n    color: ${({ theme }) => theme.colors.grey5};\n    margin-right: 0.5rem;\n    padding: 0.25rem 0.5rem;\n    border-radius: ${({ theme }) => theme.radius.radius};\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 0.85rem;\n  }\n`\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n  return (\n    <StyledProject>\n      {image && (\n        <StyledImage fluid={image.childImageSharp.fluid} index={index} />\n      )}\n      <ProjectInfo index={index}>\n        <ProjectNumber>0{index + 1}.</ProjectNumber>\n        <h3>{title || \"Projekt\"}</h3>\n        <p>{description}</p>\n        <ProjectStack>\n          {stack.map(item => {\n            return <span key={item.id}>{item.title}</span>\n          })}\n        </ProjectStack>\n        <ProjectLinks>\n          {/*\n          When I don't have links to my projects, I have fill the required \n          field in the strapi entry with a / . I will, for now, not display \n          any links for projects that I have not hosted somewhere. \n          */}\n          {github !== \"/\" && (\n            <a href={github} target=\"_blank\">\n              <FaGithubSquare />\n            </a>\n          )}\n          {url !== \"/\" && (\n            <a href={url} target=\"_blank\">\n              <FaShareSquare />\n            </a>\n          )}\n        </ProjectLinks>\n      </ProjectInfo>\n    </StyledProject>\n  )\n}\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  git: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Project\n","// import React from \"react\"\n// import Title from \"./Title\"\n// import Project from \"./Project\"\n// import { Link } from \"gatsby\"\n\n// const Projects = ({ projects, title, showLink }) => {\n//   return (\n//     <section className=\"section projects\">\n//       <Title title={title} />\n\n//       <div className=\"section-center projects-center\">\n//         {projects.map((project, index) => {\n//           return <Project key={project.id} index={index} {...project} />\n//         })}\n//       </div>\n      \n//       {showLink && (\n//         <Link to=\"/projects\" className=\"btn center-btn\">\n//           Alla projekt\n//         </Link>\n//       )}\n\n//     </section>\n//   )\n// }\n\n// export default Projects\n\n\nimport React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport OuterContentContainer from \"./containers/OuterPart\"\nimport InnerContentContainer from \"./containers/InnerPart\"\nimport ButtonLink from \"./containers/ButtonLink\"\n\n// Here we define the Projects section\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <OuterContentContainer>\n      <Title title={title} />\n      <InnerContentContainer type=\"projects\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </InnerContentContainer>\n      {showLink && <ButtonLink to=\"/projects\" center name=\"Alla projekt\" />}\n    </OuterContentContainer>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\n// ...GatsbyImageSharpFluid\nimport styled from \"styled-components\"\n\n\nconst StyledHero = styled.header`\n  margin-top: -5rem;\n  padding-top: 5rem;\n  height: 100vh;\n  background: ${({ theme }) => theme.colors.blue};\n  position: relative;\n`\n\nconst HeroSection = styled.section`\n  width: 90vw;\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.widths.maxWidth};\n  height: 100%;\n  display: grid;\n  align-items: center;\n\n  @media screen and (min-width: 992px) {\n    grid-template-columns: repeat(12, 1fr);\n    grid-template-rows: repeat(4, 1fr);\n  }\n\n`\n\nconst ImageWrapper = styled.div`\n  /* display: none; */\n    grid-row: 1/2;\n    grid-column: 2/2;\n    \n  \n@media screen and (min-width: 992px) {\n    display: block;\n    position:relative;\n    right: 70px;\n    grid-row: 3/4;\n    grid-column: 8/-2;\n    border-radius: 0%;\n}\n\n@media only screen and (max-width: 600px){\n  display:none;\n}\n\n`\nconst HeroInfo = styled.article`\n  background: ${({ theme }) => theme.colors.white};\n  h1,\n  h4 {\n    text-transform: none;\n  }\n  \n  @media screen and (min-width: 992px) {\n    \n    grid-column: 1 / span 5;\n    grid-row: 3 / auto;\n    margin-top: 40px;\n    padding-bottom:-10px;\n  \n    }\n\n  @media screen and (min-width: 1536px){\n    .stuffaboutme{\n      line-height:38px;\n      margin-bottom:19px;\n  }\n}\n`\n\nconst query = graphql`\n  {\n    file(relativePath: { eq: \"hero-img.jpg\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nconst Hero = () => {\n  const {\n    file: {\n      childImageSharp: { fluid },\n    },\n  } = useStaticQuery(query)\n\n\n  // console.log(data)\n\n  return (\n    // <header className=\"hero\">\n    <StyledHero>\n      {/* <div className=\"section-center hero-center\"> */}\n      <HeroSection>\n        {/* <article className=\"hero-info\"> */}\n        <HeroInfo>\n          <div>\n            <h1>I'm Ali</h1>\n            <div className=\"underline\"></div>\n            <h4>Tidigare säljare, läser till systemutvecklare</h4>\n        \n        <div className =\"stuffaboutme\">\n            - 🔭 Detta är min portfolio sida\n            <br />\n            - 🌱 Just nu lär jag mig React, Gatsby, GraphQL and Strapi\n            {/* <br />\n            - 🤔 I’m looking for help with anything frontend :)\n            <br /> */}\n            <br/>\n            - 💬 Jag tycker om att träffa nya personer\n            <br />\n            - 😄 Som främsta fritidsintressen har jag träning och matlagning<br />- 💜{\" \"}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://strapi.io/documentation/v3.x/getting-started/introduction.html\"> Strapi </a>\n            ,{\"\"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://reactjs.org/docs/getting-started.html\"\n            >\n              React\n            </a>\n            ,{\" \"}\n\n            {/* <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://www.gatsbyjs.org/docs/\"\n            >\n              Gatsby\n            </a>{\" \"}\n            ,{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://styled-components.com/docs\"\n            >\n              Styled Components\n            </a> */}\n            {/* <br />\n            - ⚡ Fun fact: I used to fly planes\n            <br /> */}\n        \n            <br/>\n            - 📫 Ni kan nå mig på nedanstående länkar\n            <br />\n            </div>\n            <Link to=\"/contact\" className=\"btn\">\n              kontakta mig\n            </Link>\n            <SocialLinks />\n          </div>\n          </HeroInfo>\n\n        {/* </article> */}\n        <ImageWrapper>\n        <Image fluid={fluid} className=\"hero-img\" />\n        </ImageWrapper>\n      {/* </div> */}\n\n      </HeroSection>\n    </StyledHero>\n  // {/* </header> */}\n  )\n}\n\nexport default Hero","import React from \"react\"\nimport { FaCode, FaSketch, FaAndroid } from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"web development\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 2,\n    icon: <FaSketch className=\"service-icon\" />,\n    title: \"web design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 3,\n    icon: <FaAndroid className=\"service-icon\" />,\n    title: \"app design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n]\n","import React from \"react\"\nimport styled from \"styled-components\"\n\n/* \n    A styled component that simply returns an underline\n    It is used on different places on the website\n*/\n\nconst StyledUnderline = styled.div`\n         width: ${({ hero }) => hero ? '7rem' : '5rem'};\n         height: 0.25rem;\n         background: ${({ theme }) => theme.colors.primary5};\n         margin: ${({ hero }) => `0 ${hero ? \"0\" : \"auto\"} 1.25rem`};\n       `\nexport const Underline = ({hero}) => {\n  return (<StyledUnderline hero={hero}/>)\n}","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Underline } from \"./Underline\"\n// This component will hold the content of one service card\n\nconst StyledService = styled.article`\n  background: ${({ theme }) => theme.colors.white};\n  padding: 3rem 1.5rem;\n  margin-bottom: 2rem;\n  border-radius: ${({ theme }) => theme.radius.radius};\n  text-align: center;\n  -webkit-transition: ${({ theme }) => theme.transitions.transition};\n  transition: ${({ theme }) => theme.colors.primary9};\n\n  &:hover {\n    background: ${({ theme }) => theme.colors.primary5};\n    color: ${({ theme }) => theme.colors.primary9};\n  }\n\n  :hover p {\n    color: ${({ theme }) => theme.colors.primary9};\n  }\n`\nconst Service = ({ id, icon, title, text }) => {\n  return (\n    <StyledService>\n      {icon}\n      <h4>{title}</h4>\n      <Underline />\n      <p>{text}</p>\n    </StyledService>\n  )\n}\n\nexport default Service\n","// import React from \"react\"\n// import Title from \"./Title\"\n// import services from \"../constants/services\"\n// const Services = () => {\n//   return (\n//     <section className=\"section bg-grey\">\n//       <Title title=\"Tjänster\" />\n//       <div className=\"section-center services-center\">\n//         {services.map(service => {\n//           //  destructure\n//           const { id, icon, title, text } = service\n\n//           return (\n//             <article key={id} className=\"service\">\n//               {icon}\n//               <h4>{title}</h4>\n//               <div className=\"underline\"></div>\n//               <p>{text}</p>\n//             </article>\n//           )\n//         })}\n//       </div>\n//     </section>\n//   )\n// }\n\n// export default Services\n\nimport React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nimport OuterContentContainer from \"./containers/OuterPart\"\nimport InnerContentContainer from \"./containers/InnerPart\"\nimport Service from \"./Service\"\n\n/*\n This component defines the services section\n I always try to break down a component into smaller ones.\n Service is an example of that. Almost always when you map over \n a piece of JSX you can create a component out of that.  \n*/\n\nconst Services = () => {\n  return (\n    <OuterContentContainer grey>\n      <Title title=\"Tjänster\" />\n      <InnerContentContainer type=\"services\">\n        {services.map(({ id, icon, title, text }) => {\n          return (\n            <Service key={id} id={id} icon={icon} title={title} text={text} />\n          )\n        })}\n      </InnerContentContainer>\n    </OuterContentContainer>\n  )\n}\n\nexport default Services","import React, { useContext } from \"react\"\nimport styled, { ThemeContext } from \"styled-components\"\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\n\nconst StyledJobDescription = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  column-gap: 2rem;\n  align-items: center;\n  margin-bottom: 1.25rem;\n\n  p {\n    margin-bottom: 0;\n    color: var(--clr-grey-3);\n  }\n`\n\n/*\n In this component we need to get access to the color property \n from Theme.js via the useContext-hook\n in order to set the inline style\n*/\n\nconst JobDescription = ({ name }) => {\n  const { colors } = useContext(ThemeContext)\n\n  return (\n    <StyledJobDescription>\n      <FaAngleDoubleRight\n        style={{ color: colors.primary5 }}\n      ></FaAngleDoubleRight>\n      <p>{name}</p>\n    </StyledJobDescription>\n  )\n}\n\nexport default JobDescription\n","import React from \"react\"\nimport styled from \"styled-components\"\n\n// Here we define the nav-buttons in the Jobs component\n\nconst StyledJobButton = styled.button`\n  background: transparent;\n  border-color: transparent;\n  text-transform: capitalize;\n  font-size: 1.25rem;\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n  letter-spacing: ${({ theme }) => theme.spacings.spacing};\n  margin: 0.3rem 0.5rem;\n  transition: ${({ theme }) => theme.transitions.transition};\n  cursor: pointer;\n  padding: 0.25rem 0;\n  line-height: 1;\n  border-radius: 0;\n\n  color: ${({ active, theme }) =>\n    active ? theme.colors.primary5 : theme.colors.grey1};\n  box-shadow: ${({ active, theme }) =>\n    active && `0 2px ${theme.colors.primary5}`};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.primary5};\n    box-shadow:  ${({ theme }) => `2px ${theme.colors.primary5}`};\n\n  @media screen and (min-width: 992px) {\n    margin-bottom: 1rem;\n\n\n    &:hover {\n      box-shadow: ${({ theme }) => `-2px 0 ${theme.colors.primary5}`};\n    }\n\n    box-shadow: ${({ active, theme }) =>\n      active && `-2px 0 ${theme.colors.primary5}}`};\n  }\n  }\n`\n/* // A JobButton can toggle between active and not active */\n\nconst JobButton = ({ active, render = Function.prototype, item }) => {\n  return (\n    <>\n      <StyledJobButton onClick={render} active={active}>\n        {item}\n      </StyledJobButton>\n    </>\n  )\n}\n\nexport default JobButton","import React, {useState} from \"react\"\nimport Title from \"./Title\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport OuterContentContainer from \"./containers/OuterPart\"\nimport InnerContentContainer from \"./containers/InnerPart\"\nimport JobDescription from \"./containers/JobDescription\"\nimport JobButton from \"./containers/JobButton\"\nimport ButtonLink from \"./containers/ButtonLink\"\nimport styled from \"styled-components\"\n\n// Here we define the Jobs section \n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 4rem;\n\n  \n  @media screen and (min-width: 992px) {\n    flex-direction: column;\n    justify-content: flex-start;\n  }\n`\n\n\n\nconst JobInfo = styled.article`\n  h3 {\n    font-weight: 400;\n  }\n\n  \n  h4 {\n    text-transform: uppercase;\n    color: ${({ theme }) => theme.colors.grey5};\n    background: ${({ theme }) => theme.colors.grey9};\n    display: inline-block;\n    padding: 0.375rem 0.75rem;\n    border-radius: ${({ theme }) => theme.radius.radius};\n  }\n`\nconst JobDate = styled.p`\n  letter-spacing: ${({ theme }) => theme.spacings.spacing};\n`\nconst query = graphql`\n  {\n    allStrapiJobs(sort: { fields: date, order: DESC }) {\n      nodes {\n        strapiId\n        company\n        date\n        position\n        desc {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n  const data = useStaticQuery(query)\n  // destructering\n  const {\n    allStrapiJobs: { nodes: jobs },\n  } = data\n  const [value, setValue] = useState(0)\n  const { company, position, date, desc } = jobs[value]\n\n  return (\n    <OuterContentContainer>\n      <Title title=\"erfarenhet\" />\n      <InnerContentContainer type=\"jobs\">\n        <ButtonContainer>\n          {jobs.map((item, index) => {\n            return (\n              <JobButton\n                key={item.strapiId}\n                render={() => setValue(index)}\n                active={index === value && true}\n                item={item.company}\n              />\n            )\n          })}\n        </ButtonContainer>\n\n        <JobInfo>\n          <h3>{position}</h3>\n          <h4>{company}</h4>\n          <JobDate>{date}</JobDate>\n          {desc.map(item => {\n            return <JobDescription key={item.id} name={item.name} />\n          })}\n        </JobInfo>\n      </InnerContentContainer>\n      <ButtonLink to=\"/about\" center name=\"Mitt CV\" />\n    </OuterContentContainer>\n  )\n}\n\nexport default Jobs\n\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\nimport Jobs from \"../components/Jobs\"\nimport Projects from \"../components/Projects\"\nimport Blogs from \"../components/Blogs\"\nimport SEO from \"../components/SEO\"\n\nexport default ({ data }) => {\n  const {\n    allStrapiProjects: { nodes: projects },\n    allStrapiBlogs: { nodes: blogs },\n  } = data\n  \n  return (\n    <Layout>\n      <SEO title=\"Hem\" description=\"Startsidan\" />\n      <Hero />\n      <Services />\n      <Jobs />\n      <Projects projects={projects} title=\"projekt i fokus\" showLink />\n\n      <Blogs blogs={blogs} title=\"Senaste artiklar\" showLink />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allStrapiProjects(filter: { featured: { eq: true } }) {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n\n    allStrapiBlogs(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        content\n        desc\n        date(locale: \"sv\", formatString: \"DD MMM YYYY\")\n        id\n        title\n        category\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\n\nconst BlogStyling = styled.article`\n\ndisplay:block;\nmargin-bottom: 2rem;\nbackground: ${({theme}) => theme.colors.grey10 };\nborder-radius: ${({theme}) => theme.radius.radius};\nbox-shadow: ${({theme}) => theme.shadows.lightShadow};\ntransition: ${({theme}) => theme.transitions.transition};\n\n:hover {\n  box-shadow: ${({ theme }) => theme.shadows.darkShadow};\n  transform: scale(1.09);\n}\n\n`\n\nconst StyledImage = styled ( props => <Image {...props} />)`\n  border-top-left-radius: ${({ theme }) => theme.radius.radius};\n  border-top-right-radius: ${({ theme }) => theme.radius.radius};\n  height: 15rem;\n  background-color:blue;\n\n  @media screen and (min-width: 576px) {\n    height: 17.5rem;\n  }\n  @media screen and (min-width: 850px) {\n    height: 13.75rem;\n  }\n`\n\nconst BlogCard = styled.div`\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  padding: 1.5rem 1rem;\n  \n  h4 {\n    color: ${({ theme }) => theme.colors.grey1};\n  }\n`\n\nconst Footer = styled.div` \n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n  p {\n    margin-bottom: 0;\n    font-weight: bold;\n    color: ${({ theme }) => theme.colors.grey5};\n  }\n\n  p:first-of-type {\n    display: inline-block;\n    background: ${({ theme }) => theme.colors.grey9};\n    color: ${({ theme }) => theme.colors.grey5};\n    margin-right: 0.5rem;\n    padding: 0.25rem 0.5rem;\n    border-radius: ${({ theme }) => theme.radius.radius};\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 0.85rem;\n  }\n`\n\n\nconst Blog = ({ id, title, image, date, category, slug, desc }) => {\n  return (\n    \n    <Link to={`/blogs/${slug}`} key={id}>\n\n    <BlogStyling>\n    \n      {/* <article className=\"blog\"> */}\n        {/* if image is not supplied, instead of breaking, dont show any image */}\n        {/* {image && (<Image fluid={image.childImageSharp.fluid} className=\"blog-img\" />)} */}\n        {image && <StyledImage fluid={image.childImageSharp.fluid} />}\n\n        <BlogCard>\n        {/* <div className=\"blog-card\"> */}\n          {/* if title is not supplied, set a defualt title */}\n          \n          <h4>{title || \"Ariklar\"}</h4>\n          <p>{desc}</p>\n\n          <Footer>\n            <p>{category}</p>\n            <p>{date}</p>\n          </Footer>\n\n\n      </BlogCard>\n\n        {/* </div> */}\n      {/* </article> */}\n    </BlogStyling>\n\n    </Link>\n  )\n}\n\n\nBlog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n}\n\nexport default Blog","import React from \"react\"\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport InnerContentContainer from './containers/InnerPart'\nimport OuterContentContainer from './containers/OuterPart'\n\n//Outside container____________________________________\n\n\n\n//_______________________________________________________\n\n//Inner container________________________________________\n\n\n//________________________________________________________\n\nexport const Blogs = ({ blogs, title, showLink }) => {\n  return (\n    <OuterContentContainer>\n      <Title title={title} />\n      <InnerContentContainer type=\"blogs\">\n        {blogs.map(blog => {\n          return <Blog key={blog.id} {...blog} />\n        })}\n      </InnerContentContainer>\n      {/* {showLink && <ButtonLink to=\"/blog\" center name=\"Alla artiklar\" />} */}\n      {showLink && (<Link to=\"/blog\" className=\"btn center-btn\">Alla artiklar</Link>)}\n    </OuterContentContainer>\n  )\n}\n\nexport default Blogs\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\n/* \r\n    I will set the default width to 90vw, but create an option to\r\n    set the width per Innercontainer manually. \r\n    This container is placed inside the OuterContentContainer \r\n    and under the Title-component.  \r\n    Depending on the type of the section and on the screensize,\r\n    we manipulate the grid in different ways. \r\n*/\r\nconst StyledInnerContainer = styled.div`\r\n  width: ${({ width = \"90vw\" }) => width};\r\n  margin: 0 auto;\r\n  max-width: ${({ theme }) => theme.widths.maxWidth};\r\n\r\n  @media screen and (min-width: 576px) {\r\n    display: ${({ type }) => type === \"blogs\" && \"grid\"};\r\n    grid-template-columns: ${({ type }) =>\r\n      type === \"blogs\" && \"repeat(auto-fill, minmax(368px, 1fr))\"};\r\n    column-gap: ${({ type }) => type === \"blogs\" && \"2rem\"};\r\n  }\r\n\r\n  @media screen and (min-width: 676px) {\r\n    display: ${({ type }) => type === \"services\" && \"grid\"};\r\n    grid-template-columns: ${({ type }) => type === \"services\" && \"1fr 1fr\"};\r\n    -webkit-column-gap: ${({ type }) => type === \"services\" && \"2rem\"};\r\n    -moz-column-gap: ${({ type }) => type === \"services\" && \"2rem\"};\r\n    column-gap: ${({ type }) => type === \"services\" && \"2rem\"};\r\n  }\r\n  \r\n  @media screen and (min-width: 992px) {\r\n    display: ${({ type }) =>\r\n      (type === \"services\" || type === \"jobs\") && \"grid\"};\r\n    width: ${({ type }) => (type === \"jobs\" ? \"90vw\" : \"95vw\")};\r\n    grid-template-columns: ${({ type }) =>\r\n      type === \"services\" ? \"1fr 1fr 1fr\" : type === \"jobs\" && \"200px 1fr\"};\r\n    column-gap: ${({ type }) => type === \"jobs\" && \"4rem\"};\r\n  }\r\n`\r\nconst InnerContentContainer = ({ children, type, width }) => {\r\n  return <StyledInnerContainer type={type} width={width}>{children}</StyledInnerContainer>\r\n}\r\nexport default InnerContentContainer\r\n"],"sourceRoot":""}