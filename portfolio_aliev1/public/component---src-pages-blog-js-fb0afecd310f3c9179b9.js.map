{"version":3,"sources":["webpack:///./src/components/containers/OuterPart.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js","webpack:///./src/components/containers/InnerPart.js","webpack:///./src/pages/blog.js"],"names":["StyledOuterContentContainer","styled","section","theme","grey","colors","grey10","OuterContentContainer","children","BlogStyling","article","radius","shadows","lightShadow","transitions","transition","darkShadow","StyledImage","props","BlogCard","div","grey1","Footer","grey5","grey9","Blog","id","title","image","date","category","slug","desc","to","key","fluid","childImageSharp","Blogs","blogs","showLink","Title","type","map","blog","className","StyledInnerContainer","width","widths","maxWidth","InnerContentContainer","query","data","allStrapiBlogs","nodes","description"],"mappings":"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","file":"component---src-pages-blog-js-fb0afecd310f3c9179b9.js","sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\n/*\r\n I have turned the section class (. section in main.css) into this \r\n container-component. I included a grey-prop to be able to \r\n alternate between white and grey sections.\r\n*/\r\n\r\n\r\nconst StyledOuterContentContainer = styled.section`\r\n  padding: 5rem 0;\r\n  background: ${({ theme, grey }) => grey && theme.colors.grey10};\r\n`\r\n\r\nconst OuterContentContainer = ({ children, grey }) => {\r\n  return <StyledOuterContentContainer grey={grey}>{children}</StyledOuterContentContainer>\r\n}\r\n\r\nexport default OuterContentContainer;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\n\nconst BlogStyling = styled.article`\n\ndisplay:block;\nmargin-bottom: 2rem;\nbackground: ${({theme}) => theme.colors.grey10 };\nborder-radius: ${({theme}) => theme.radius.radius};\nbox-shadow: ${({theme}) => theme.shadows.lightShadow};\ntransition: ${({theme}) => theme.transitions.transition};\n\n:hover {\n  box-shadow: ${({ theme }) => theme.shadows.darkShadow};\n  transform: scale(1.09);\n}\n\n`\n\nconst StyledImage = styled ( props => <Image {...props} />)`\n  border-top-left-radius: ${({ theme }) => theme.radius.radius};\n  border-top-right-radius: ${({ theme }) => theme.radius.radius};\n  height: 15rem;\n  background-color:blue;\n\n  @media screen and (min-width: 576px) {\n    height: 17.5rem;\n  }\n  @media screen and (min-width: 850px) {\n    height: 13.75rem;\n  }\n`\n\nconst BlogCard = styled.div`\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  padding: 1.5rem 1rem;\n  \n  h4 {\n    color: ${({ theme }) => theme.colors.grey1};\n  }\n`\n\nconst Footer = styled.div` \n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n  p {\n    margin-bottom: 0;\n    font-weight: bold;\n    color: ${({ theme }) => theme.colors.grey5};\n  }\n\n  p:first-of-type {\n    display: inline-block;\n    background: ${({ theme }) => theme.colors.grey9};\n    color: ${({ theme }) => theme.colors.grey5};\n    margin-right: 0.5rem;\n    padding: 0.25rem 0.5rem;\n    border-radius: ${({ theme }) => theme.radius.radius};\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 0.85rem;\n  }\n`\n\n\nconst Blog = ({ id, title, image, date, category, slug, desc }) => {\n  return (\n    \n    <Link to={`/blogs/${slug}`} key={id}>\n\n    <BlogStyling>\n    \n      {/* <article className=\"blog\"> */}\n        {/* if image is not supplied, instead of breaking, dont show any image */}\n        {/* {image && (<Image fluid={image.childImageSharp.fluid} className=\"blog-img\" />)} */}\n        {image && <StyledImage fluid={image.childImageSharp.fluid} />}\n\n        <BlogCard>\n        {/* <div className=\"blog-card\"> */}\n          {/* if title is not supplied, set a defualt title */}\n          \n          <h4>{title || \"Ariklar\"}</h4>\n          <p>{desc}</p>\n\n          <Footer>\n            <p>{category}</p>\n            <p>{date}</p>\n          </Footer>\n\n\n      </BlogCard>\n\n        {/* </div> */}\n      {/* </article> */}\n    </BlogStyling>\n\n    </Link>\n  )\n}\n\n\nBlog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n}\n\nexport default Blog","import React from \"react\"\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport InnerContentContainer from './containers/InnerPart'\nimport OuterContentContainer from './containers/OuterPart'\n\n//Outside container____________________________________\n\n\n\n//_______________________________________________________\n\n//Inner container________________________________________\n\n\n//________________________________________________________\n\nexport const Blogs = ({ blogs, title, showLink }) => {\n  return (\n    <OuterContentContainer>\n      <Title title={title} />\n      <InnerContentContainer type=\"blogs\">\n        {blogs.map(blog => {\n          return <Blog key={blog.id} {...blog} />\n        })}\n      </InnerContentContainer>\n      {/* {showLink && <ButtonLink to=\"/blog\" center name=\"Alla artiklar\" />} */}\n      {showLink && (<Link to=\"/blog\" className=\"btn center-btn\">Alla artiklar</Link>)}\n    </OuterContentContainer>\n  )\n}\n\nexport default Blogs\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\n/* \r\n    I will set the default width to 90vw, but create an option to\r\n    set the width per Innercontainer manually. \r\n    This container is placed inside the OuterContentContainer \r\n    and under the Title-component.  \r\n    Depending on the type of the section and on the screensize,\r\n    we manipulate the grid in different ways. \r\n*/\r\nconst StyledInnerContainer = styled.div`\r\n  width: ${({ width = \"90vw\" }) => width};\r\n  margin: 0 auto;\r\n  max-width: ${({ theme }) => theme.widths.maxWidth};\r\n\r\n  @media screen and (min-width: 576px) {\r\n    display: ${({ type }) => type === \"blogs\" && \"grid\"};\r\n    grid-template-columns: ${({ type }) =>\r\n      type === \"blogs\" && \"repeat(auto-fill, minmax(368px, 1fr))\"};\r\n    column-gap: ${({ type }) => type === \"blogs\" && \"2rem\"};\r\n  }\r\n\r\n  @media screen and (min-width: 676px) {\r\n    display: ${({ type }) => type === \"services\" && \"grid\"};\r\n    grid-template-columns: ${({ type }) => type === \"services\" && \"1fr 1fr\"};\r\n    -webkit-column-gap: ${({ type }) => type === \"services\" && \"2rem\"};\r\n    -moz-column-gap: ${({ type }) => type === \"services\" && \"2rem\"};\r\n    column-gap: ${({ type }) => type === \"services\" && \"2rem\"};\r\n  }\r\n  \r\n  @media screen and (min-width: 992px) {\r\n    display: ${({ type }) =>\r\n      (type === \"services\" || type === \"jobs\") && \"grid\"};\r\n    width: ${({ type }) => (type === \"jobs\" ? \"90vw\" : \"95vw\")};\r\n    grid-template-columns: ${({ type }) =>\r\n      type === \"services\" ? \"1fr 1fr 1fr\" : type === \"jobs\" && \"200px 1fr\"};\r\n    column-gap: ${({ type }) => type === \"jobs\" && \"4rem\"};\r\n  }\r\n`\r\nconst InnerContentContainer = ({ children, type, width }) => {\r\n  return <StyledInnerContainer type={type} width={width}>{children}</StyledInnerContainer>\r\n}\r\nexport default InnerContentContainer\r\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport Blogs from \"../components/Blogs\"\nimport SEO from \"../components/SEO\"\n// ...GatsbyImageSharpFluid\n\nconst Blog = ({\n  data: {\n    allStrapiBlogs: { nodes: blogs },\n  },\n}) => {\n  return (\n    <Layout>\n      <SEO title=\"Bloggen\" description=\"Bloggsidan\" />\n      <section className=\"blog-page\">\n        <Blogs blogs={blogs} title=\"Alla artiklar\" />\n      </section>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  {\n    allStrapiBlogs {\n      nodes {\n        slug\n        desc\n        date(locale: \"sv\", formatString: \"DD MMM YYYY\")\n        id\n        title\n        category\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Blog\n"],"sourceRoot":""}