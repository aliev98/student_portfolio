{"version":3,"sources":["webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js","webpack:///./src/pages/blog.js"],"names":["BlogStyling","styled","article","theme","colors","grey10","radius","shadows","lightShadow","transitions","transition","darkShadow","StyledImage","props","BlogCard","div","grey1","Footer","grey5","grey9","Blog","id","title","image","date","category","slug","desc","to","key","fluid","childImageSharp","Blogs","blogs","showLink","className","Title","map","blog","query","data","allStrapiBlogs","nodes","description"],"mappings":"6KAOMA,EAAcC,IAAOC,QAAV,wEAAGD,CAAH,mJAGH,qBAAEE,MAAiBC,OAAOC,UACvB,qBAAEF,MAAiBG,OAAOA,UAC7B,qBAAEH,MAAiBI,QAAQC,eAC3B,qBAAEL,MAAiBM,YAAYC,cAI7B,qBAAGP,MAAkBI,QAAQI,cAMvCC,EAAcX,aAAS,SAAAY,GAAK,OAAI,kBAAC,IAAUA,MAAhC,wEAAGZ,CAAH,yMACW,qBAAGE,MAAkBG,OAAOA,UAC3B,qBAAGH,MAAkBG,OAAOA,UAYnDQ,EAAWb,IAAOc,IAAV,qEAAGd,CAAH,sFAOD,qBAAGE,MAAkBC,OAAOY,SAInCC,EAAShB,IAAOc,IAAV,mEAAGd,CAAH,8SAQC,qBAAGE,MAAkBC,OAAOc,SAKvB,qBAAGf,MAAkBC,OAAOe,SACjC,qBAAGhB,MAAkBC,OAAOc,SAGpB,qBAAGf,MAAkBG,OAAOA,UAsDlCc,EA9CF,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,GAAIC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACtD,OAEE,kBAAC,IAAD,CAAMC,GAAE,UAAYF,EAAQG,IAAKR,GAEjC,kBAACrB,EAAD,KAKKuB,GAAS,kBAACX,EAAD,CAAakB,MAAOP,EAAMQ,gBAAgBD,QAEpD,kBAAChB,EAAD,KAIE,4BAAKQ,GAAS,WACd,2BAAIK,GAEJ,kBAACV,EAAD,KACE,2BAAIQ,GACJ,2BAAID,QChDDQ,IA7BM,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOX,EAAsB,EAAtBA,MAAOY,EAAe,EAAfA,SACpC,OAEF,6BAASC,UAAU,WAEb,kBAACC,EAAA,EAAD,CAAOd,MAAOA,IAGd,yBAAKa,UAAU,+BACZF,EAAMI,KAAI,SAAAC,GACT,OAAO,kBAAC,EAAD,eAAMT,IAAKS,EAAKjB,IAAQiB,QAOlCJ,GACC,kBAAC,IAAD,CAAMN,GAAG,QAAQO,UAAU,kBAA3B,oB,kCCnCR,0GAqBaI,EAAK,YAsBHnB,UApCF,SAAC,GAIP,IAFsBa,EAEvB,EAHJO,KACEC,eAAkBC,MAGpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKpB,MAAM,UAAUqB,YAAY,eACjC,6BAASR,UAAU,aACjB,kBAAC,IAAD,CAAOF,MAAOA,EAAOX,MAAM","file":"component---src-pages-blog-js-82b3a062809b45b69eb6.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\n\nconst BlogStyling = styled.article`\ndisplay:block;\nmargin-bottom: 2rem;\nbackground: ${({theme}) => theme.colors.grey10 };\nborder-radius: ${({theme}) => theme.radius.radius};\nbox-shadow: ${({theme}) => theme.shadows.lightShadow};\ntransition: ${({theme}) => theme.transitions.transition};\n\n\n:hover {\n  box-shadow: ${({ theme }) => theme.shadows.darkShadow};\n  transform: scale(1.09);\n}\n\n`\n\nconst StyledImage = styled ( props => <Image {...props} />)`\n  border-top-left-radius: ${({ theme }) => theme.radius.radius};\n  border-top-right-radius: ${({ theme }) => theme.radius.radius};\n  height: 15rem;\n  background-color:blue;\n\n  @media screen and (min-width: 576px) {\n    height: 17.5rem;\n  }\n  @media screen and (min-width: 850px) {\n    height: 13.75rem;\n  }\n`\n\nconst BlogCard = styled.div`\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  padding: 1.5rem 1rem;\n\n  \n  h4 {\n    color: ${({ theme }) => theme.colors.grey1};\n  }\n  \n`\nconst Footer = styled.div` \n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n  p {\n    margin-bottom: 0;\n    font-weight: bold;\n    color: ${({ theme }) => theme.colors.grey5};\n  }\n\n  p:first-of-type {\n    display: inline-block;\n    background: ${({ theme }) => theme.colors.grey9};\n    color: ${({ theme }) => theme.colors.grey5};\n    margin-right: 0.5rem;\n    padding: 0.25rem 0.5rem;\n    border-radius: ${({ theme }) => theme.radius.radius};\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 0.85rem;\n  }\n`\n\n\nconst Blog = ({ id, title, image, date, category, slug, desc }) => {\n  return (\n    \n    <Link to={`/blogs/${slug}`} key={id}>\n\n    <BlogStyling>\n    \n      {/* <article className=\"blog\"> */}\n        {/* if image is not supplied, instead of breaking, dont show any image */}\n        {/* {image && (<Image fluid={image.childImageSharp.fluid} className=\"blog-img\" />)} */}\n        {image && <StyledImage fluid={image.childImageSharp.fluid} />}\n\n        <BlogCard>\n        {/* <div className=\"blog-card\"> */}\n          {/* if title is not supplied, set a defualt title */}\n          \n          <h4>{title || \"Ariklar\"}</h4>\n          <p>{desc}</p>\n\n          <Footer>\n            <p>{category}</p>\n            <p>{date}</p>\n          </Footer>\n\n\n      </BlogCard>\n\n        {/* </div> */}\n      {/* </article> */}\n    </BlogStyling>\n\n    </Link>\n  )\n}\n\n\nBlog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n}\n\nexport default Blog","import React from \"react\"\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n// import InnerContentContainer from \"./outsidepart\"\n\n//Outside container____________________________________\n\n//_______________________________________________________\n\n//Inner container________________________________________\n\n\n\n//________________________________________________________\n\nexport const Blogs = ({ blogs, title, showLink }) => {\n  return (\n    // <OutsidePart>\n<section className=\"section\">\n\n      <Title title={title} />\n      {/* <InnerContentContainer type = \"blogs\"> */}\n     \n      <div className=\"section-center blogs-center\">\n        {blogs.map(blog => {\n          return <Blog key={blog.id} {...blog} />\n        })}\n      </div>\n      \n      {/* </InnerContentContainer> */}\n      \n      {/* If the showLink is undefined, dont show any link, otherwise show link */}\n      {showLink && (\n        <Link to=\"/blog\" className=\"btn center-btn\">\n          Alla artiklar\n        </Link>\n      )}\n\n </section> \n\n// </OutsidePart>\n  )\n}\n\nexport default Blogs\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport Blogs from \"../components/Blogs\"\nimport SEO from \"../components/SEO\"\n// ...GatsbyImageSharpFluid\n\nconst Blog = ({\n  data: {\n    allStrapiBlogs: { nodes: blogs },\n  },\n}) => {\n  return (\n    <Layout>\n      <SEO title=\"Bloggen\" description=\"Bloggsidan\" />\n      <section className=\"blog-page\">\n        <Blogs blogs={blogs} title=\"Alla artiklar\" />\n      </section>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  {\n    allStrapiBlogs {\n      nodes {\n        slug\n        desc\n        date(locale: \"sv\", formatString: \"DD MMM YYYY\")\n        id\n        title\n        category\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Blog\n"],"sourceRoot":""}