{"version":3,"sources":["webpack:///./src/components/other/Underline.js","webpack:///./src/components/other/InnerSection.js","webpack:///./src/components/other/Title.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js","webpack:///./src/pages/blog.js"],"names":["UnderlineStyling","styled","div","hero","theme","colors","primary5","Underline","StyledInnerContainer","width","widths","maxWidth","type","InnerSection","children","StyledTitle","Title","title","StyledBlog","article","grey10","radius","shadows","lightShadow","transitions","transition","darkShadow","StyledImage","props","BlogCard","grey1","Footer","grey5","grey9","Blog","id","image","date","category","slug","desc","to","key","fluid","childImageSharp","StyledContainer","section","grey","BlogsContainer","Blogs","blogs","showLink","map","blog","ButtonComp","center","name","BlogSectionStyling","query","data","allStrapiBlogs","nodes","description"],"mappings":"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","file":"component---src-pages-blog-js-e22f01b19fcd22bb6fcc.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\n/* \n    A styled component that simply returns an underline\n    It is used on different places on the website\n*/\n\nconst UnderlineStyling = styled.div`\n\n         width: ${({ hero }) => hero ? '30rem' : '5rem'};\n         height: 0.25rem;\n         background: ${({ theme }) => theme.colors.primary5};\n         margin: ${({ hero }) => `0 ${hero ? \"0\" : \"auto\"} 1.25rem`};\n`\n\nexport const Underline = ({hero}) => {\n  return (<UnderlineStyling hero={hero}/>)\n}","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst StyledInnerContainer = styled.div`\n  width: ${({ width = \"90vw\" }) => width};\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.widths.maxWidth};\n\n  @media screen and (min-width: 576px) {\n    display: ${({ type }) => type === \"blogs\" && \"grid\"};\n    grid-template-columns: ${({ type }) =>\n    type === \"blogs\" && \"repeat(auto-fill, minmax(368px, 1fr))\"};\n    column-gap: ${({ type }) => type === \"blogs\" && \"2rem\"};\n  }\n  \n  @media screen and (min-width: 676px) {\n    display: ${({ type }) => type === \"services\" && \"grid\"};\n    grid-template-columns: ${({ type }) => type === \"services\" && \"1fr 1fr\"};\n    -webkit-column-gap: ${({ type }) => type === \"services\" && \"2rem\"};\n    -moz-column-gap: ${({ type }) => type === \"services\" && \"2rem\"};\n    column-gap: ${({ type }) => type === \"services\" && \"2rem\"};\n  }\n  \n  @media screen and (min-width: 992px) {\n    display: ${({ type }) =>\n      (type === \"services\" || type === \"jobs\") && \"grid\"};\n    width: ${({ type }) => (type === \"jobs\" ? \"90vw\" : \"95vw\")};\n    grid-template-columns: ${({ type }) =>\n      type === \"services\" ? \"1fr 1fr 1fr\" : type === \"jobs\" && \"200px 1fr\"};\n    column-gap: ${({ type }) => type === \"jobs\" && \"4rem\"};\n    \n  }\n`\nconst InnerSection = ({ children, type, width }) => {\n  return <StyledInnerContainer type={type} width={width}>{children}</StyledInnerContainer>\n}\n\nexport default InnerSection","import React from \"react\"\nimport { Underline } from \"./Underline\"\nimport styled from \"styled-components\"\n\nconst StyledTitle = styled.div`\n  margin-bottom: 4rem;\n  text-align: center;\n  font-style: italic;\n`\n// The title that will be placed at the top of each section\n\nconst Title = ({ title }) => {\n  return (\n    <StyledTitle>\n      <h2>{title || \"default title\"}</h2>\n      <Underline />\n    </StyledTitle>\n  )\n}\n\nexport default Title","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\n// The component holds one blogpost card \n\nconst StyledBlog = styled.article`\n  display: block;\n  margin-bottom: 2rem;\n  background: ${({ theme }) => theme.colors.grey10};\n  border-radius: ${({ theme }) => theme.radius.radius};\n  box-shadow: ${({ theme }) => theme.shadows.lightShadow};\n  transition: ${({ theme }) => theme.transitions.transition};\n  \n:hover {\n  box-shadow: ${({ theme }) => theme.shadows.darkShadow};\n  transform: scale(1.02);\n}\n\n`\n\nconst StyledImage = styled ( props => <Image {...props} />)`\n  border-top-left-radius: ${({ theme }) => theme.radius.radius};\n  border-top-right-radius: ${({ theme }) => theme.radius.radius};\n  height: 15rem;\n  \n  @media screen and (min-width: 576px) {\n    height: 17.5rem;\n  }\n\n  @media screen and (min-width: 850px) {\n    height: 13.75rem;\n  }\n`\n\nconst BlogCard = styled.div`\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  padding: 1.5rem 1rem;\n  h4 {\n    color: ${({ theme }) => theme.colors.grey1};\n  }\n`\nconst Footer = styled.div`\n \n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  \n\n  p {\n    margin-bottom: 0;\n    font-weight: bold;\n    color: ${({ theme }) => theme.colors.grey5};\n  }\n\n  p:first-of-type {\n    display: inline-block;\n    background: ${({ theme }) => theme.colors.grey9};\n    color: ${({ theme }) => theme.colors.grey5};\n    margin-right: 0.5rem;\n    padding: 0.25rem 0.5rem;\n    border-radius: ${({ theme }) => theme.radius.radius};\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 0.85rem;\n  }\n`\n\nconst Blog = ({ id, title, image, date, category, slug, desc }) => {\n  return (\n    <Link to={`/blogs/${slug}`} key={id}>\n      <StyledBlog>\n        {/* if image is not supplied, instead of breaking, dont show any image */}\n        {image && <StyledImage fluid={image.childImageSharp.fluid} />}\n\n        <BlogCard>\n          {/* if title is not supplied, set a defualt title */}\n          <h4>{title || \"Artiklar\"}</h4>\n          <p>{desc}</p>\n          <Footer>\n            <p>{category}</p>\n            <p>{date}</p>\n          </Footer>\n        </BlogCard>\n        \n      </StyledBlog>\n    </Link>\n  )\n}\n\nBlog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n}\n\nexport default Blog","import React from \"react\"\nimport Title from \"./other/Title\"\nimport Blog from \"./Blog\"\nimport InsidePart from \"./other/InnerSection\"\nimport ButtonComp from \"./other/ButtonComp\"\nimport styled from \"styled-components\"\n\n\nconst StyledContainer = styled.section`\n  padding: 5rem 0;\n  background: ${({ theme, grey }) => grey && theme.colors.grey10};\n`\n\n\nconst BlogsContainer = ({ children, grey }) => {\n  return <StyledContainer grey={grey}>{children}</StyledContainer>\n}\n\nexport const Blogs = ({ blogs, title, showLink }) => {\n  return (\n    <BlogsContainer>\n      <Title title={title} />\n      <InsidePart type=\"blogs\">\n        {blogs.map(blog => {\n          return <Blog key={blog.id} {...blog} />\n        })}\n      </InsidePart>\n      \n      {showLink && <ButtonComp to=\"/blog\" center name=\"Alla artiklar\" />}\n    </BlogsContainer>\n  )\n}\n\nexport default Blogs","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport Blogs from \"../components/Blogs\"\nimport SEO from \"../components/SEO\"\nimport styled from \"styled-components\"\n\nconst BlogSectionStyling = styled.section`\n  background: ${({ theme }) => theme.colors.grey10};\n  min-height: calc(100vh - 5rem - 9rem);\n`\n\nconst Blog = ({\n  data: {\n    allStrapiBlogs: { nodes: blogs },\n  },\n\n}) => {\n  return (\n    <Layout>\n      <SEO title=\"Bloggen\" description=\"Bloggsidan\" />\n      <BlogSectionStyling>\n        <Blogs blogs={blogs} title=\"Alla artiklar\" />\n      </BlogSectionStyling>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allStrapiBlogs {\n      nodes {\n        slug\n        desc\n        date(locale: \"sv\", formatString: \"DD MMM YYYY\")\n        id\n        title\n        category\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Blog"],"sourceRoot":""}