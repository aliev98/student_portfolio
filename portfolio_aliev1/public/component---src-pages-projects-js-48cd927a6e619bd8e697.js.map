{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/other/Underline.js","webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/other/InnerSection.js","webpack:///./src/components/other/Title.js"],"names":["AllProjectsContainer","styled","section","theme","colors","grey10","query","ProjectsPage","projects","data","allStrapiProjects","nodes","title","description","UnderlineStyling","div","hero","primary5","Underline","ImageStyling","props","radius","transitions","transition","index","shadows","darkShadow","ProjectInfoPart","white","ProjectStyling","article","ProjectNumber","ProjectLinks","primary1","ProjectStack","grey9","grey5","Project","github","stack","url","image","fluid","childImageSharp","map","item","key","id","href","target","StyledContainer","grey","ProjectsContainer","children","Projects","showLink","Title","type","project","ButtonComp","to","center","name","StyledInnerContainer","width","widths","maxWidth","InnerSection","StyledTitle"],"mappings":"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","file":"component---src-pages-projects-js-48cd927a6e619bd8e697.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport Projects from \"../components/Projects\"\nimport SEO from \"../components/SEO\"\nimport styled from \"styled-components\"\n\n// Here we define the projects page\n\nconst AllProjectsContainer = styled.section`\n  background: ${({ theme }) => theme.colors.grey10};\n  min-height: calc(100vh - 5rem - 9rem);\n`\n\nconst ProjectsPage = ({\n  data: {\n    allStrapiProjects: { nodes: projects },\n  },\n}) => {\n  return (\n    <Layout>\n      <SEO title=\"Projekt\" description=\"Projektsidan\" />\n      <AllProjectsContainer>\n        <Projects projects={projects} title=\"Alla projekt\" />\n      </AllProjectsContainer>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allStrapiProjects {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n  }\n`\n\nexport default ProjectsPage","import React from \"react\"\nimport styled from \"styled-components\"\n\n/* \n    A styled component that simply returns an underline\n    It is used on different places on the website\n*/\n\nconst UnderlineStyling = styled.div`\n\n         width: ${({ hero }) => hero ? '30rem' : '5rem'};\n         height: 0.25rem;\n         background: ${({ theme }) => theme.colors.primary5};\n         margin: ${({ hero }) => `0 ${hero ? \"0\" : \"auto\"} 1.25rem`};\n`\n\nexport const Underline = ({hero}) => {\n  return (<UnderlineStyling hero={hero}/>)\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nimport styled from \"styled-components\"\n\n// Here we create one 'Project in focus'\n\nconst ImageStyling = styled(props => <Image {...props} />)`\n  border-top-left-radius: ${({ theme }) => theme.radius.radius};\n  border-top-right-radius: ${({ theme }) => theme.radius.radius};\n  height: 19rem;\n  z-index: 1;\n  ::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      to bottom right,\n      ${({ theme }) => theme.colors.primary5},\n      #222\n    );\n    opacity: 0.85;\n    transition: ${({ theme }) => theme.transitions.transition};\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 22rem;\n  }\n  @media screen and (min-width: 992px) {\n    grid-column: ${({ index }) => (index % 2 !== 0 ? \"5/-1\" : \"1 / span 8\")};\n    grid-row: 1 / 2;\n    height: 20rem;\n    border-radius: ${({ theme }) => theme.radius.radius};\n    box-shadow: ${({ theme }) => theme.shadows.darkShadow};\n  }\n`\n\nconst ProjectInfoPart = styled.div`\n  background: ${({ theme }) => theme.colors.white};\n  padding: 1rem 2rem;\n  border-bottom-left-radius: ${({ theme }) => theme.radius.radius};\n  border-bottom-right-radius: ${({ theme }) => theme.radius.radius};\n\n  h3 {\n    font-weight: 500;\n    margin-bottom: 1.5rem;\n    font-size: 1.5rem;\n  }\n\n  @media screen and (min-width: 992px) {\n    border-radius: ${({ theme }) => theme.radius.radius};\n    box-shadow: ${({ theme }) => theme.shadows.darkShadow};\n    z-index: 1;\n    grid-column: ${({ index }) => (index % 2 === 0 ? \"5/ 11\" : \"2 / span 7\")};\n    grid-row: 1 / 1;\n    text-align: ${({ index }) => index % 2 === 0 && \"left\"};\n  }\n`\n\nconst ProjectStyling = styled.article`\n  display: grid;\n  margin-bottom: 4rem;\n\n  @media screen and (min-width: 992px) {\n    grid-template-columns: repeat(12, 1fr);\n    align-items: center;\n  }\n\n  :hover ${ImageStyling} ::after {\n    opacity: 0;\n  }\n`\n\nconst ProjectNumber = styled.div`\n  display: inline-block;\n  font-size: 1.25rem;\n  color: ${({ theme }) => theme.colors.primary5};\n  margin-bottom: 0.75rem;\n`\n\nconst ProjectLinks = styled.div`\n  a {\n    color: ${({ theme }) => theme.colors.primary5};\n    font-size: 1.25rem;\n    margin-right: 0.5rem;\n\n    transition: ${({ theme }) => theme.transitions.transition};\n    :hover {\n      color: ${({ theme }) => theme.colors.primary1};\n    }\n  }\n`\n\nconst ProjectStack = styled.div`\n  span {\n    margin-bottom: 1rem;\n    display: inline-block;\n    background: ${({ theme }) => theme.colors.grey9};\n    color: ${({ theme }) => theme.colors.grey5};\n    margin-right: 0.5rem;\n    padding: 0.25rem 0.5rem;\n    border-radius: ${({ theme }) => theme.radius.radius};\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 0.85rem;\n  }\n`\n\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n  return (\n    <ProjectStyling>\n\n      {image && (\n        <ImageStyling fluid={image.childImageSharp.fluid} index={index} />\n      )}\n      \n      <ProjectInfoPart index={index}>\n        <ProjectNumber>0{index+1}.</ProjectNumber>\n        <h3>{title || \"Projekt\"}</h3>\n        <p>{description}</p>\n       \n        <ProjectStack>\n          {stack.map(item => {\n            return <span key={item.id}>{item.title}</span>\n          })}\n        </ProjectStack>\n        \n        <ProjectLinks>\n          {/*\n          When I don't have links to my projects, I have fill the required \n          field in the strapi entry with a / . I will, for now, not display \n          any links for projects that I have not hosted somewhere. \n          */}\n          {github !== \"/\" && (\n            <a href={github} target=\"_blank\">\n              <FaGithubSquare />\n            </a>\n          )}\n          {url !== \"/\" && (\n            <a href={url} target=\"_blank\">\n              <FaShareSquare />\n            </a>\n          )}\n        </ProjectLinks>\n      </ProjectInfoPart>\n    </ProjectStyling>\n  )\n}\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  git: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Project","import React from \"react\"\nimport Title from \"./other/Title\"\nimport Project from \"./Project\"\nimport InsidePart from \"./other/InnerSection\"\nimport ButtonComp from \"./other/ButtonComp\"\nimport styled from \"styled-components\"\n\n\n\nconst StyledContainer = styled.section`\n  padding: 5rem 0;\n  background: ${({ theme, grey }) => grey && theme.colors.grey10};\n`\n\nconst ProjectsContainer = ({ children, grey }) => {\n  return <StyledContainer grey={grey}>{children}</StyledContainer>\n}\n\n\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <ProjectsContainer>\n      <Title title={title} />\n      <InsidePart type=\"projects\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </InsidePart>\n      {showLink && <ButtonComp to=\"/projects\" center name=\"Alla projekt\" />}\n    </ProjectsContainer>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst StyledInnerContainer = styled.div`\n  width: ${({ width = \"90vw\" }) => width};\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.widths.maxWidth};\n\n  @media screen and (min-width: 576px) {\n    display: ${({ type }) => type === \"blogs\" && \"grid\"};\n    grid-template-columns: ${({ type }) =>\n    type === \"blogs\" && \"repeat(auto-fill, minmax(368px, 1fr))\"};\n    column-gap: ${({ type }) => type === \"blogs\" && \"2rem\"};\n  }\n  \n  @media screen and (min-width: 676px) {\n    display: ${({ type }) => type === \"services\" && \"grid\"};\n    grid-template-columns: ${({ type }) => type === \"services\" && \"1fr 1fr\"};\n    -webkit-column-gap: ${({ type }) => type === \"services\" && \"2rem\"};\n    -moz-column-gap: ${({ type }) => type === \"services\" && \"2rem\"};\n    column-gap: ${({ type }) => type === \"services\" && \"2rem\"};\n  }\n  \n  @media screen and (min-width: 992px) {\n    display: ${({ type }) =>\n      (type === \"services\" || type === \"jobs\") && \"grid\"};\n    width: ${({ type }) => (type === \"jobs\" ? \"90vw\" : \"95vw\")};\n    grid-template-columns: ${({ type }) =>\n      type === \"services\" ? \"1fr 1fr 1fr\" : type === \"jobs\" && \"200px 1fr\"};\n    column-gap: ${({ type }) => type === \"jobs\" && \"4rem\"};\n    \n  }\n`\nconst InnerSection = ({ children, type, width }) => {\n  return <StyledInnerContainer type={type} width={width}>{children}</StyledInnerContainer>\n}\n\nexport default InnerSection","import React from \"react\"\nimport { Underline } from \"./Underline\"\nimport styled from \"styled-components\"\n\nconst StyledTitle = styled.div`\n  margin-bottom: 4rem;\n  text-align: center;\n  font-style: italic;\n`\n// The title that will be placed at the top of each section\n\nconst Title = ({ title }) => {\n  return (\n    <StyledTitle>\n      <h2>{title || \"default title\"}</h2>\n      <Underline />\n    </StyledTitle>\n  )\n}\n\nexport default Title"],"sourceRoot":""}