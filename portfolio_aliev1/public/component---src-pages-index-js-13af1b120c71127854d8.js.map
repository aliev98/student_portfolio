{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","description","title","github","stack","url","image","index","className","fluid","childImageSharp","map","item","key","id","href","Projects","projects","showLink","Title","project","to","Hero","useStaticQuery","file","target","rel","icon","text","Services","services","service","Jobs","data","console","log","jobs","allStrapiJobs","nodes","React","useState","value","setValue","company","position","date","desc","strapiId","onClick","name","query","allStrapiProjects","blogs","allStrapiBlogs","Layout","SEO","Blogs","BlogStyling","styled","article","theme","colors","grey10","radius","shadows","lightShadow","transitions","transition","darkShadow","StyledImage","props","BlogCard","div","grey1","Footer","grey5","grey9","Blog","category","slug","blog"],"mappings":"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","file":"component---src-pages-index-js-13af1b120c71127854d8.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\n\n\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n  return (\n    <article className=\"project\">\n      {/* if image is not supplied, instead of breaking, dont show any image */}\n      {image && (\n        <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      )}\n      \n      <div className=\"project-info\">\n        <span className=\"project-number\">0{index + 1}.</span>\n        {/* if title is not supplied, set a defualt title */}\n        <h3>{title || \"Projekt\"}</h3>\n        <p className=\"project-description\">{description}</p>\n        <div className=\"project-stack\">\n          {stack.map(item => {\n            return <span key={item.id}>{item.title}</span>\n          })}\n        </div>\n        <div className=\"project-links\">\n          <a href={github}>\n            <FaGithubSquare className=\"project-icon\" />\n          </a>\n          <a href={url}>\n            <FaShareSquare className=\"project-icon\" />\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\n/*if you for example forget to set these fields in strapi,\nso if you forget to give them values, you will get a error in your console\n*/\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  git: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\n\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </div>\n      \n      {showLink && (\n        <Link to=\"/projects\" className=\"btn center-btn\">\n          Alla projekt\n        </Link>\n      )}\n\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\n// ...GatsbyImageSharpFluid\n\nconst query = graphql`\n  {\n    file(relativePath: { eq: \"hero-img.jpg\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nconst Hero = () => {\n  const {\n    file: {\n      childImageSharp: { fluid },\n    },\n  } = useStaticQuery(query)\n\n\n  // console.log(data)\n\n  return (\n    <header className=\"hero\">\n      <div className=\"section-center hero-center\">\n        <article className=\"hero-info\">\n          <div>\n            <h1>I'm Ali</h1>\n            <div className=\"underline\"></div>\n            <h4>Tidigare sÃ¤ljare, lÃ¤ser till systemutvecklare</h4>\n            - ğŸ”­ Detta Ã¤r min portfolio sida\n            <br />\n            - ğŸŒ± Just nu lÃ¤r jag mig React, Gatsby, GraphQL and Strapi\n            {/* <br />\n            - ğŸ¤” Iâ€™m looking for help with anything frontend :)\n            <br /> */}\n            <br/>\n            - ğŸ’¬ Jag tycker om att trÃ¤ffa nya personer\n            <br />\n            - ğŸ˜„ Som frÃ¤msta fritidsintressen har jag trÃ¤ning och matlagning<br />- ğŸ’œ{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://strapi.io/documentation/v3.x/getting-started/introduction.html\"\n            >\n             Strapi\n            </a>\n            ,{\"\"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://reactjs.org/docs/getting-started.html\"\n            >\n              React\n            </a>\n            ,{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://www.gatsbyjs.org/docs/\"\n            >\n              Gatsby\n            </a>{\" \"}\n            ,{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://styled-components.com/docs\"\n            >\n              Styled Components\n            </a>\n            {/* <br />\n            - âš¡ Fun fact: I used to fly planes\n            <br /> */}\n        \n            <br/>\n            - ğŸ“« Ni kan nÃ¥ mig pÃ¥ nedanstÃ¥ende lÃ¤nkar\n            <br />\n            <Link to=\"/contact\" className=\"btn\">\n              kontakta mig\n            </Link>\n            <SocialLinks />\n          </div>\n\n        </article>\n        <Image fluid={fluid} className=\"hero-img\" />\n      </div>\n    </header>\n  )\n}\n\nexport default Hero","import React from \"react\"\nimport { FaCode, FaSketch, FaAndroid } from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"web development\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 2,\n    icon: <FaSketch className=\"service-icon\" />,\n    title: \"web design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 3,\n    icon: <FaAndroid className=\"service-icon\" />,\n    title: \"app design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nconst Services = () => {\n  return (\n    <section className=\"section bg-grey\">\n      <Title title=\"TjÃ¤nster\" />\n      <div className=\"section-center services-center\">\n        {services.map(service => {\n          //  destructure\n          const { id, icon, title, text } = service\n\n          return (\n            <article key={id} className=\"service\">\n              {icon}\n              <h4>{title}</h4>\n              <div className=\"underline\"></div>\n              <p>{text}</p>\n            </article>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services\n","import React from \"react\"\nimport Title from \"./Title\"\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nconst query = graphql`\n  {\n    allStrapiJobs(sort: { fields: strapiId, order: DESC }) {\n      nodes {\n        strapiId\n        company\n        date\n        position\n        desc {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n  const data = useStaticQuery(query)\n  console.log(data)\n  // destructering\n  const {\n    allStrapiJobs: { nodes: jobs },\n  } = data\n  console.log(jobs)\n  const [value, setValue] = React.useState(0)\n  const { company, position, date, desc } = jobs[value]\n  console.log(company, position, date, desc)\n\n  return (\n    <section className=\"section jobs\">\n      <Title title=\"erfarenhet\" />\n      <div className=\"jobs-center\">\n        {/* btn container */}\n        <div className=\"btn-container\">\n          {jobs.map((item, index) => {\n            return (\n              <button\n                key={item.strapiId}\n                onClick={() => setValue(index)}\n                className={`job-btn ${index === value && \"active-btn\"}`}\n              >\n                {item.company}\n              </button>\n            )\n          })}\n        </div>\n        {/* job info */}\n        <article className=\"job-info\">\n          <h3>{position}</h3>\n          <h4>{company}</h4>\n          <p className=\"job-date\">{date}</p>\n          {desc.map(item => {\n            return (\n              <div key={item.id} className=\"job-desc\">\n                <FaAngleDoubleRight className=\"job-icon\"></FaAngleDoubleRight>\n                <p>{item.name}</p>\n              </div>\n            )\n          })}\n        </article>\n      </div>\n      <Link to=\"/about\" className=\"btn center-btn\">\n        Mitt CV\n      </Link>\n    </section>\n  )\n}\n\nexport default Jobs\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\nimport Jobs from \"../components/Jobs\"\nimport Projects from \"../components/Projects\"\nimport Blogs from \"../components/Blogs\"\nimport SEO from \"../components/SEO\"\n\nexport default ({ data }) => {\n  const {\n    allStrapiProjects: { nodes: projects },\n    allStrapiBlogs: { nodes: blogs },\n  } = data\n  \n  return (\n    <Layout>\n      <SEO title=\"Hem\" description=\"Startsidan\" />\n      <Hero />\n      <Services />\n      <Jobs />\n      <Projects projects={projects} title=\"projekt i fokus\" showLink />\n\n      <Blogs blogs={blogs} title=\"Senaste artiklar\" showLink />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allStrapiProjects(filter: { featured: { eq: true } }) {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n\n    allStrapiBlogs(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        content\n        desc\n        date(locale: \"sv\", formatString: \"DD MMM YYYY\")\n        id\n        title\n        category\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\n\nconst BlogStyling = styled.article`\ndisplay:block;\nmargin-bottom: 2rem;\nbackground: ${({theme}) => theme.colors.grey10 };\nborder-radius: ${({theme}) => theme.radius.radius};\nbox-shadow: ${({theme}) => theme.shadows.lightShadow};\ntransition: ${({theme}) => theme.transitions.transition};\n\n\n:hover {\n  box-shadow: ${({ theme }) => theme.shadows.darkShadow};\n  transform: scale(1.09);\n}\n\n`\n\nconst StyledImage = styled ( props => <Image {...props} />)`\n  border-top-left-radius: ${({ theme }) => theme.radius.radius};\n  border-top-right-radius: ${({ theme }) => theme.radius.radius};\n  height: 15rem;\n  background-color:blue;\n\n  @media screen and (min-width: 576px) {\n    height: 17.5rem;\n  }\n  @media screen and (min-width: 850px) {\n    height: 13.75rem;\n  }\n`\n\nconst BlogCard = styled.div`\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  padding: 1.5rem 1rem;\n\n  \n  h4 {\n    color: ${({ theme }) => theme.colors.grey1};\n  }\n  \n`\nconst Footer = styled.div` \n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n  p {\n    margin-bottom: 0;\n    font-weight: bold;\n    color: ${({ theme }) => theme.colors.grey5};\n  }\n\n  p:first-of-type {\n    display: inline-block;\n    background: ${({ theme }) => theme.colors.grey9};\n    color: ${({ theme }) => theme.colors.grey5};\n    margin-right: 0.5rem;\n    padding: 0.25rem 0.5rem;\n    border-radius: ${({ theme }) => theme.radius.radius};\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 0.85rem;\n  }\n`\n\n\nconst Blog = ({ id, title, image, date, category, slug, desc }) => {\n  return (\n    \n    <Link to={`/blogs/${slug}`} key={id}>\n\n    <BlogStyling>\n    \n      {/* <article className=\"blog\"> */}\n        {/* if image is not supplied, instead of breaking, dont show any image */}\n        {/* {image && (<Image fluid={image.childImageSharp.fluid} className=\"blog-img\" />)} */}\n        {image && <StyledImage fluid={image.childImageSharp.fluid} />}\n\n        <BlogCard>\n        {/* <div className=\"blog-card\"> */}\n          {/* if title is not supplied, set a defualt title */}\n          \n          <h4>{title || \"Ariklar\"}</h4>\n          <p>{desc}</p>\n\n          <Footer>\n            <p>{category}</p>\n            <p>{date}</p>\n          </Footer>\n\n\n      </BlogCard>\n\n        {/* </div> */}\n      {/* </article> */}\n    </BlogStyling>\n\n    </Link>\n  )\n}\n\n\nBlog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n}\n\nexport default Blog","import React from \"react\"\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n// import InnerContentContainer from \"./outsidepart\"\n\n//Outside container____________________________________\n\n//_______________________________________________________\n\n//Inner container________________________________________\n\n\n\n//________________________________________________________\n\nexport const Blogs = ({ blogs, title, showLink }) => {\n  return (\n    // <OutsidePart>\n<section className=\"section\">\n\n      <Title title={title} />\n      {/* <InnerContentContainer type = \"blogs\"> */}\n     \n      <div className=\"section-center blogs-center\">\n        {blogs.map(blog => {\n          return <Blog key={blog.id} {...blog} />\n        })}\n      </div>\n      \n      {/* </InnerContentContainer> */}\n      \n      {/* If the showLink is undefined, dont show any link, otherwise show link */}\n      {showLink && (\n        <Link to=\"/blog\" className=\"btn center-btn\">\n          Alla artiklar\n        </Link>\n      )}\n\n </section> \n\n// </OutsidePart>\n  )\n}\n\nexport default Blogs\n"],"sourceRoot":""}